#include <opencv2/opencv.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/imgproc.hpp>
#include <iostream>
#include <string>
using namespace std;
using namespace cv;
int main()
{
    string path;
    cout << "ENTER PATH OF IMAGE: ";
    cin >> path;
    Mat img = imread(path);
    
    double angle;
    cout << "ENTER THE ANGLE: ";
    cin >> angle;
    
    Point2f center((img.cols -1) / 2.0, (img.rows -1) / 2.0);
    Mat rot = getRotationMatrix2D(center, angle, 1.0);
    Rect2f bbox = RotatedRect(Point2f(), img.size(), angle).boundingRect2f();

    rot.at<double>(0, 2) += bbox.width / 2.0 - img.cols / 2.0;
    rot.at<double>(1, 2) += bbox.height / 2.0 - img.rows / 2.0;

    Mat dst;
    warpAffine(img, dst, rot, bbox.size());
    imwrite("rotated_im.png", dst);
    imshow("REAL-image", img);
    imshow("ROTATED-image", dst);
    waitKey(0);

    return 0;
}
